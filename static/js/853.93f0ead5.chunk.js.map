{"version":3,"file":"static/js/853.93f0ead5.chunk.js","mappings":"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","sources":["components/Cast/CastList/CastList.styled.jsx","components/Cast/CastList/CastListItem/CastListItem.styled.jsx","components/Cast/CastList/CastListItem/CastListItem.jsx","components/Cast/CastList/CastList.jsx","components/Cast/NoCast/NoCast.styled.jsx","components/Cast/NoCast/NoCast.jsx","components/Cast/Cast.jsx","components/Loader/Loader.jsx","servises/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: 1900px;\n  grid-template-columns: repeat(auto-fill, minmax(185px, 1fr));\n  grid-gap: 82px;\n  -ms-grid-column-align: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.4),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.4), 0px 1px 10px 0px rgba(0, 0, 0, 0.4);\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 302px;\n  margin-bottom: 8px;\n`;\n\nexport const ActorData = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  align-items: center;\n  padding-bottom: 8px;\n`;\n\nexport const Name = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n`;\n","import PropTypes from 'prop-types';\nimport { ActorData, Image, Item, Name } from './CastListItem.styled';\nimport man from '../../../../images/man.jpg';\nimport woman from '../../../../images/woman.jpg';\n\nexport const CastListItem = ({ name, character, profile_path, gender }) => {\n  const BASE_URL = 'http://image.tmdb.org/t/p/w185/';\n  console.log(gender === 1);\n\n  return (\n    <Item>\n      <Image\n        src={\n          profile_path ? BASE_URL + profile_path : gender === 1 ? woman : man\n        }\n        alt={name}\n      />\n      <ActorData>\n        <Name>{name}</Name>\n        <p>Character: {character}</p>\n      </ActorData>\n    </Item>\n  );\n};\n\nCastListItem.propTypes = {\n  name: PropTypes.string,\n  character: PropTypes.string,\n  profile_path: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport { List } from './CastList.styled';\nimport { CastListItem } from './CastListItem';\n\nexport const CastList = ({ cast }) => {\n  return (\n    <List>\n      {cast.map(({ id, name, character, profile_path, gender }) => (\n        <CastListItem\n          key={id}\n          name={name}\n          character={character}\n          profile_path={profile_path}\n          gender={gender}\n        />\n      ))}\n    </List>\n  );\n};\n\nCastList.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.number,\n      name: PropTypes.string,\n      character: PropTypes.string,\n      profile_path: PropTypes.string,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const AnyReviews = styled.div`\n  font-size: 20px;\n`;\n","import { AnyReviews } from './NoCast.styled';\n\nexport const NoCast = () => {\n  return <AnyReviews>We don't have any reviews for this movie.</AnyReviews>;\n};\n","import { Loader } from 'components/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'servises/api';\nimport { CastList } from './CastList';\nimport { NoCast } from './NoCast';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const getCastData = async () => {\n      try {\n        setIsLoading(true);\n        setCast(await getCast(movieId));\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getCastData();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {cast.length !== 0 ? <CastList cast={cast} /> : <NoCast />}\n      {error && alert('Sorry, something is wrong!')}\n    </>\n  );\n};\n","import { ThreeDots } from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#de0b74\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n\nLoader.propTypes = {\n  height: PropTypes.string,\n  width: PropTypes.string,\n  radius: PropTypes.number,\n  color: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  wrapperStyle: PropTypes.object,\n  wrapperClassName: PropTypes.string,\n  visible: PropTypes.bool,\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0NzhhYjBlYjNmYjE0YzA0ODc2YzI1YmIxNDI0M2NiZCIsInN1YiI6IjY0ZDE2MzYyNmQ0Yzk3MDBlYzU4YjNlNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wkZrfHNayLG0He9kinamYKtKq9Py8-TCiR3q_k01mNs';\naxios.defaults.headers.common['accept'] = 'application/json';\n\nexport const getTrendingMovies = async page => {\n  const { data } = await axios.get('trending/movie/day', {\n    params: {\n      page: page,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?language=en-US`);\n\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      query: query,\n      include_adult: false,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits?language=en-US`);\n\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?language=en-US&page=1`\n  );\n\n  return data.results;\n};\n"],"names":["List","styled","Item","Image","ActorData","Name","CastListItem","name","character","profile_path","gender","console","log","src","woman","man","alt","CastList","cast","map","id","AnyReviews","NoCast","Cast","movieId","useParams","useState","setCast","isLoading","setIsLoading","error","setError","useEffect","getCastData","getCast","Loader","length","alert","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","axios","getTrendingMovies","page","params","data","getMovieDetails","getSearchMovie","query","include_adult","language","results","getReviews"],"sourceRoot":""}