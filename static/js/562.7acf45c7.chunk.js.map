{"version":3,"file":"static/js/562.7acf45c7.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/MovieDetailsItem/MovieDetailsItem.styled.jsx","components/MovieDetailsItem/MovieDetailsItem.jsx","pages/MovieDetails/MovieDetails.jsx","pages/MovieDetails/index.js","servises/api.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#de0b74\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n\nLoader.propTypes = {\n  height: PropTypes.string,\n  width: PropTypes.string,\n  radius: PropTypes.number,\n  color: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  wrapperStyle: PropTypes.object,\n  wrapperClassName: PropTypes.string,\n  visible: PropTypes.bool,\n};\n","import styled from '@emotion/styled';\n\nexport const ButtonEl = styled.button`\n  margin-bottom: 12px;\n  height: auto;\n  width: auto;\n  padding: 8px;\n  display: flex;\n  justify-content: flex-start;\n  gap: 16px;\n  align-items: center;\n  font-size: 18px;\n  box-shadow: 0px 2px 4px -1px rgba(225, 77, 114, 0.4),\n    0px 4px 5px 0px rgba(225, 77, 114, 0.4),\n    0px 1px 10px 0px rgba(225, 77, 114, 0.4);\n  transition: box-shadow 200ms linear;\n\n  &:hover,\n  :focus {\n    box-shadow: 2px 4px 6px -2px rgba(225, 77, 114, 0.4),\n      2px 6px 7px 2px rgba(225, 77, 114, 0.4),\n      2px 3px 12px 2px rgba(225, 77, 114, 0.4);\n  }\n`;\n","import { BsArrowLeft } from 'react-icons/bs';\nimport { ButtonEl } from './Button.styled';\nimport { Link } from 'react-router-dom';\nimport { useRef } from 'react';\n\nexport const Button = ({ location }) => {\n  const locationRef = useRef(location.state?.from ?? `/`);\n  // console.log(location);\n  // console.log(locationRef);\n\n  return (\n    <Link to={locationRef.current}>\n      <ButtonEl>\n        <BsArrowLeft />\n        <span>Go back</span>\n      </ButtonEl>\n    </Link>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const PageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 28px;\n`;\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  gap: 32px;\n`;\n\nexport const Image = styled.img`\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.5),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.5), 0px 1px 10px 0px rgba(0, 0, 0, 0.5);\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  padding-left: 24px;\n  padding-right: 32px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.3),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.3), 0px 1px 10px 0px rgba(0, 0, 0, 0.3);\n`;\n\nexport const Title = styled.h2`\n  font-size: 44px;\n`;\n\nexport const Paragraph = styled.p`\n  font-size: 22px;\n  font-weight: 500;\n`;\n\nexport const Score = styled.span`\n  font-size: 20px;\n`;\n\nexport const Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const Overview = styled.p`\n  padding-left: 28px;\n  font-size: 18px;\n`;\n\nexport const GenresList = styled.ul`\n  padding-left: 28px;\n  font-size: 18px;\n  display: flex;\n  gap: 24px;\n`;\n\nexport const AddInfoContainer = styled.div`\n  border-color: gray;\n`;\n\nexport const AddInfoTitle = styled.p`\n  font-size: 18px;\n  margin-bottom: 20px;\n`;\n\nexport const AddInfoList = styled.ul`\n  font-size: 20px;\n  padding-left: 28px;\n  color: #de0b74;\n`;\n\nexport const AddInfoItem = styled.li`\n  margin-bottom: 12px;\n`;\n\nexport const Line = styled.div`\n  height: 1px;\n  width: 100%;\n  border: none;\n  background-color: gray;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.8),\n    0px 1px 10px 0px rgba(0, 0, 0, 0.8);\n`;\n","import { Link, Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport {\n  MovieContainer,\n  MovieInfo,\n  PageContainer,\n  Title,\n  Image,\n  Paragraph,\n  Score,\n  Overview,\n  Description,\n  GenresList,\n  AddInfoContainer,\n  AddInfoTitle,\n  AddInfoList,\n  AddInfoItem,\n  Line,\n} from './MovieDetailsItem.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieDetailsItem = ({ movieDetails }) => {\n  const { poster_path, title, vote_average, overview, genres } = movieDetails;\n  const BASE_URL = 'http://image.tmdb.org/t/p/w342/';\n\n  return (\n    <PageContainer>\n      <MovieContainer>\n        <Image src={BASE_URL + poster_path} alt={title} />\n        <MovieInfo>\n          <Title>{title}</Title>\n          <Paragraph>\n            Use Score: <Score>{Math.round(Number(vote_average) * 10)} %</Score>\n          </Paragraph>\n          <Description>\n            <Paragraph>Overview</Paragraph>\n            <Overview>{overview}</Overview>\n          </Description>\n          <Description>\n            <Paragraph>Genres</Paragraph>\n            <GenresList>\n              {genres.map(({ id, name }) => (\n                <li key={id}>{name}</li>\n              ))}\n            </GenresList>\n          </Description>\n        </MovieInfo>\n      </MovieContainer>\n      <Line></Line>\n      <AddInfoContainer>\n        <AddInfoTitle>Additional information</AddInfoTitle>\n        <AddInfoList>\n          <AddInfoItem>\n            <Link to=\"cast\">Cast</Link>\n          </AddInfoItem>\n          <AddInfoItem>\n            <Link to=\"reviews\">Reviews</Link>\n          </AddInfoItem>\n        </AddInfoList>\n      </AddInfoContainer>\n      <Line></Line>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </PageContainer>\n  );\n};\n\nMovieDetailsItem.propTypes = {\n  movieDetails: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n","import { Button } from 'components/Button';\nimport { Loader } from 'components/Loader';\nimport { MovieDetailsItem } from 'components/MovieDetailsItem';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'servises/api';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const getMovieDetailsData = async () => {\n      try {\n        setIsLoading(true);\n        setMovieDetails(await getMovieDetails(movieId));\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovieDetailsData();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {movieDetails && (\n        <>\n          <Button location={location} />\n          <MovieDetailsItem movieDetails={movieDetails} />\n        </>\n      )}\n      {error && alert('Sorry, something is wrong!')}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import  MovieDetails  from './MovieDetails.jsx';\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0NzhhYjBlYjNmYjE0YzA0ODc2YzI1YmIxNDI0M2NiZCIsInN1YiI6IjY0ZDE2MzYyNmQ0Yzk3MDBlYzU4YjNlNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wkZrfHNayLG0He9kinamYKtKq9Py8-TCiR3q_k01mNs';\naxios.defaults.headers.common['accept'] = 'application/json';\n\nexport const getTrendingMovies = async page => {\n  const { data } = await axios.get('trending/movie/day', {\n    params: {\n      page: page,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?language=en-US`);\n\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      query: query,\n      include_adult: false,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits?language=en-US`);\n\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?language=en-US&page=1`\n  );\n\n  return data.results;\n};\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","ButtonEl","styled","Button","location","locationRef","useRef","state","from","to","current","PageContainer","MovieContainer","Image","MovieInfo","Title","Paragraph","Score","Description","Overview","GenresList","AddInfoContainer","AddInfoTitle","AddInfoList","AddInfoItem","Line","MovieDetailsItem","movieDetails","poster_path","title","vote_average","overview","genres","src","alt","Math","round","Number","map","id","name","Suspense","movieId","useParams","useState","setMovieDetails","isLoading","setIsLoading","error","setError","useLocation","useEffect","getMovieDetailsData","getMovieDetails","alert","axios","getTrendingMovies","page","params","data","getSearchMovie","query","include_adult","language","results","getCast","cast","getReviews"],"sourceRoot":""}